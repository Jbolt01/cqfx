# automatically generated by the FlatBuffers compiler, do not modify

# namespace: ctc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PriceLevelDelta(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PriceLevelDelta()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPriceLevelDelta(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def PriceLevelDeltaBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x43\x54\x43\x31", size_prefixed=size_prefixed)

    # PriceLevelDelta
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PriceLevelDelta
    def Side(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # PriceLevelDelta
    def PxTicks(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PriceLevelDelta
    def DeltaLots(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def PriceLevelDeltaStart(builder):
    builder.StartObject(3)

def Start(builder):
    PriceLevelDeltaStart(builder)

def PriceLevelDeltaAddSide(builder, side):
    builder.PrependUint8Slot(0, side, 0)

def AddSide(builder, side):
    PriceLevelDeltaAddSide(builder, side)

def PriceLevelDeltaAddPxTicks(builder, pxTicks):
    builder.PrependInt32Slot(1, pxTicks, 0)

def AddPxTicks(builder, pxTicks):
    PriceLevelDeltaAddPxTicks(builder, pxTicks)

def PriceLevelDeltaAddDeltaLots(builder, deltaLots):
    builder.PrependInt64Slot(2, deltaLots, 0)

def AddDeltaLots(builder, deltaLots):
    PriceLevelDeltaAddDeltaLots(builder, deltaLots)

def PriceLevelDeltaEnd(builder):
    return builder.EndObject()

def End(builder):
    return PriceLevelDeltaEnd(builder)
