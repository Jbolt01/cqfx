// automatically generated by the FlatBuffers compiler, do not modify

package ctc;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class PriceLevelDelta extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static PriceLevelDelta getRootAsPriceLevelDelta(ByteBuffer _bb) { return getRootAsPriceLevelDelta(_bb, new PriceLevelDelta()); }
  public static PriceLevelDelta getRootAsPriceLevelDelta(ByteBuffer _bb, PriceLevelDelta obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PriceLevelDelta __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int side() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int pxTicks() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public long deltaLots() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createPriceLevelDelta(FlatBufferBuilder builder,
      int side,
      int pxTicks,
      long deltaLots) {
    builder.startTable(3);
    PriceLevelDelta.addDeltaLots(builder, deltaLots);
    PriceLevelDelta.addPxTicks(builder, pxTicks);
    PriceLevelDelta.addSide(builder, side);
    return PriceLevelDelta.endPriceLevelDelta(builder);
  }

  public static void startPriceLevelDelta(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addSide(FlatBufferBuilder builder, int side) { builder.addByte(0, (byte) side, (byte) 0); }
  public static void addPxTicks(FlatBufferBuilder builder, int pxTicks) { builder.addInt(1, pxTicks, 0); }
  public static void addDeltaLots(FlatBufferBuilder builder, long deltaLots) { builder.addLong(2, deltaLots, 0L); }
  public static int endPriceLevelDelta(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PriceLevelDelta get(int j) { return get(new PriceLevelDelta(), j); }
    public PriceLevelDelta get(PriceLevelDelta obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

