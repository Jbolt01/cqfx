// automatically generated by the FlatBuffers compiler, do not modify

package ctc;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class EtfComponent extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static EtfComponent getRootAsEtfComponent(ByteBuffer _bb) { return getRootAsEtfComponent(_bb, new EtfComponent()); }
  public static EtfComponent getRootAsEtfComponent(ByteBuffer _bb, EtfComponent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public EtfComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long etfInstrumentId() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long componentInstrumentId() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public int weightNum() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int weightDen() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createEtfComponent(FlatBufferBuilder builder,
      long etfInstrumentId,
      long componentInstrumentId,
      int weightNum,
      int weightDen) {
    builder.startTable(4);
    EtfComponent.addWeightDen(builder, weightDen);
    EtfComponent.addWeightNum(builder, weightNum);
    EtfComponent.addComponentInstrumentId(builder, componentInstrumentId);
    EtfComponent.addEtfInstrumentId(builder, etfInstrumentId);
    return EtfComponent.endEtfComponent(builder);
  }

  public static void startEtfComponent(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addEtfInstrumentId(FlatBufferBuilder builder, long etfInstrumentId) { builder.addInt(0, (int) etfInstrumentId, (int) 0L); }
  public static void addComponentInstrumentId(FlatBufferBuilder builder, long componentInstrumentId) { builder.addInt(1, (int) componentInstrumentId, (int) 0L); }
  public static void addWeightNum(FlatBufferBuilder builder, int weightNum) { builder.addInt(2, weightNum, 0); }
  public static void addWeightDen(FlatBufferBuilder builder, int weightDen) { builder.addInt(3, weightDen, 0); }
  public static int endEtfComponent(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public EtfComponent get(int j) { return get(new EtfComponent(), j); }
    public EtfComponent get(EtfComponent obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

