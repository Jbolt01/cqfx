// automatically generated by the FlatBuffers compiler, do not modify

package ctc;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class SessionEvent extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static SessionEvent getRootAsSessionEvent(ByteBuffer _bb) { return getRootAsSessionEvent(_bb, new SessionEvent()); }
  public static SessionEvent getRootAsSessionEvent(ByteBuffer _bb, SessionEvent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SessionEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long sessionId() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public int roundNo() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int dayNo() { int o = __offset(8); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public String state() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer stateAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer stateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public long tsNanos() { int o = __offset(12); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createSessionEvent(FlatBufferBuilder builder,
      long sessionId,
      int roundNo,
      int dayNo,
      int stateOffset,
      long tsNanos) {
    builder.startTable(5);
    SessionEvent.addTsNanos(builder, tsNanos);
    SessionEvent.addState(builder, stateOffset);
    SessionEvent.addSessionId(builder, sessionId);
    SessionEvent.addDayNo(builder, dayNo);
    SessionEvent.addRoundNo(builder, roundNo);
    return SessionEvent.endSessionEvent(builder);
  }

  public static void startSessionEvent(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addSessionId(FlatBufferBuilder builder, long sessionId) { builder.addInt(0, (int) sessionId, (int) 0L); }
  public static void addRoundNo(FlatBufferBuilder builder, int roundNo) { builder.addShort(1, (short) roundNo, (short) 0); }
  public static void addDayNo(FlatBufferBuilder builder, int dayNo) { builder.addShort(2, (short) dayNo, (short) 0); }
  public static void addState(FlatBufferBuilder builder, int stateOffset) { builder.addOffset(3, stateOffset, 0); }
  public static void addTsNanos(FlatBufferBuilder builder, long tsNanos) { builder.addLong(4, tsNanos, 0L); }
  public static int endSessionEvent(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SessionEvent get(int j) { return get(new SessionEvent(), j); }
    public SessionEvent get(SessionEvent obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

