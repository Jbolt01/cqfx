// automatically generated by the FlatBuffers compiler, do not modify

package ctc;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ETFCreateRedeem extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static ETFCreateRedeem getRootAsETFCreateRedeem(ByteBuffer _bb) { return getRootAsETFCreateRedeem(_bb, new ETFCreateRedeem()); }
  public static ETFCreateRedeem getRootAsETFCreateRedeem(ByteBuffer _bb, ETFCreateRedeem obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ETFCreateRedeem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long requestId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long etfInstrumentId() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long lots() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long userId() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long teamId() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createETFCreateRedeem(FlatBufferBuilder builder,
      long requestId,
      long etfInstrumentId,
      long lots,
      long userId,
      long teamId) {
    builder.startTable(5);
    ETFCreateRedeem.addLots(builder, lots);
    ETFCreateRedeem.addRequestId(builder, requestId);
    ETFCreateRedeem.addTeamId(builder, teamId);
    ETFCreateRedeem.addUserId(builder, userId);
    ETFCreateRedeem.addEtfInstrumentId(builder, etfInstrumentId);
    return ETFCreateRedeem.endETFCreateRedeem(builder);
  }

  public static void startETFCreateRedeem(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addRequestId(FlatBufferBuilder builder, long requestId) { builder.addLong(0, requestId, 0L); }
  public static void addEtfInstrumentId(FlatBufferBuilder builder, long etfInstrumentId) { builder.addInt(1, (int) etfInstrumentId, (int) 0L); }
  public static void addLots(FlatBufferBuilder builder, long lots) { builder.addLong(2, lots, 0L); }
  public static void addUserId(FlatBufferBuilder builder, long userId) { builder.addInt(3, (int) userId, (int) 0L); }
  public static void addTeamId(FlatBufferBuilder builder, long teamId) { builder.addInt(4, (int) teamId, (int) 0L); }
  public static int endETFCreateRedeem(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ETFCreateRedeem get(int j) { return get(new ETFCreateRedeem(), j); }
    public ETFCreateRedeem get(ETFCreateRedeem obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

